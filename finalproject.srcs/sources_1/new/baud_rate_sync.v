module baud_rate_sync_with_en2(
    input clk,               // 100 MHz clock (the faster clock domain)
    input reset,             // Reset signal
    input en_baud,           // 'en' signal from 9600 baud clock domain (already generated by another module)
    output reg en2           // Synchronize 'en' to 100 MHz clk, pulses for one clock cycle
);

    // Two-stage synchronizer to synchronize the 'en' signal from the 9600 baud clock
    reg en_sync_1;           // First stage of synchronization
    reg en_sync_2;           // Second stage of synchronization

    // Synchronizer for 'en' from the 9600 baud clock domain to 100 MHz clock domain
    always @(posedge clk or posedge reset) begin
        if (reset) begin
            en_sync_1 <= 0;
            en_sync_2 <= 0;
            en2 <= 0;
        end else begin
            // Synchronize the 'en' signal from the 9600 baud clock domain to the 100 MHz clock domain
            en_sync_1 <= en_baud;  // Capture 'en' in the first stage
            en_sync_2 <= en_sync_1; // Capture the value in the second stage

            // Generate 'en2' which pulses high for one clock cycle when 'en' is active
            en2 <= en_sync_2 & ~en_sync_1;  // A pulse is generated when 'en' goes high
        end
    end

endmodule
